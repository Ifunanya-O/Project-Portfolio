Objective:
Send a daily report cost effectively with an AWS Lambda function to meet Customer's reuqest of accessing their daily order history.
You can use Lambda functions to automate actions that are based on events. 
Or, you can schedule the actions to happen at a specific time. 

Step 1: Observe the salesanalysisreportrole IAM settings.
Step 2: Create a Lambda layer and a data extractor Lambda function
Step 3: Add the lambda layer to the data extractor lambda function and import for the data extractor Lambda function

#Code imported for the data extractor Lambda function.

import boto3
import pymysql
import sys

def lambda_handler(event, context):

    # Retrieve the database connection information from the event input parameter.

    dbUrl = event['dbUrl']
    dbName = event['dbName']
    dbUser = event['dbUser']
    dbPassword = event['dbPassword']

    # Establish a connection to the Cafe database, and set the cursor to return results as a Python dictionary.

    try:
        conn = pymysql.connect(host=dbUrl, user=dbUser, passwd=dbPassword, db=dbName, cursorclass=pymysql.cursors.DictCursor)

    except pymysql.Error as e:
        print('ERROR: Failed to connect to the Cafe database.')
        print('Error Details: %d %s' % (e.args[0], e.args[1]))
        sys.exit()

    # Execute the query to generate the daily sales analysis result set.

    with conn.cursor() as cur:
        cur.execute("SELECT  c.product_group_number, c.product_group_name, a.product_id, b.product_name, CAST(sum(a.quantity) AS int) as quantity FROM order_item a, product b, product_group c WHERE b.id = a.product_id AND c.product_group_number = b.product_group GROUP BY c.product_group_number, a.product_id")
        result = cur.fetchall()

    # Close the connection.

    conn.close()

    # Return the result set.

    return {'statusCode': 200, 'body': result}

Step 5:Configuring network settings for the function

Step 6: Testing the data extractor Lambda function



{
  "dbUrl": "ec2-52-89-80-65.us-west-2.compute.amazonaws.com",
  "dbName": "cafe_db",
  "dbUser": "root",
  "dbPassword": "Re:Start!9"
}

http://52.89.80.65/cafe

arn:aws:sns:us-west-2:091084340981:salesAnalysisReportTopic



aws lambda create-function \
--function-name salesAnalysisReport \
--runtime python3.9 \
--zip-file fileb://salesAnalysisReport-v2.zip \
--handler salesAnalysisReport.lambda_handler \
--region us-west-2 \
--role arn:aws:iam::091084340981:role/salesAnalysisReportRole


cron(30 20 ? * MON-SAT *)

cron(10 16 * * ? *)
aws events put-rule --schedule-expression "cron(23 16 * * ? *)" --name salesAnalysisReport

--at-time

















